@model DeveloperDOtnetStoreProject.Models.Views.ProductCreateViewModel

@{
    ViewBag.Title = "Edit Produkt";
}

<h2>Edit Produkt</h2>

@using (Html.BeginForm())
{
    @*Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        <hr />
        <h4>Produkt Beskrivelse</h4>
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Product.ProductModelId)
        *@
        <!-- Left window Starts -->
        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
            @*// Product Name*@
            <div class="form-group">
                @Html.LabelFor(t => t.Product.NameHeader, new { @class = "control-label" })
                @Html.TextBoxFor(t => t.Product.NameHeader, new { @class = "form-control" })
            </div>
            @*// Name Descriptiion*@
            <div class="form-group">
                @Html.Label("Short Description", new { @class = "control-label" })
                @Html.TextBoxFor(t => t.Product.NameDescription, new { @class = "form-control" })
            </div>
            @*// Price*@
            <div class="form-group">
                @Html.Label("Price", new { @class = "control-label" })
                @Html.TextBoxFor(t => t.Product.Price, new { @class = "form-control" })
            </div>
        </div> <!-- Left Windows Ends -->
        <!-- Right window Start -->
        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
            @*// Quantity*@
            <div class="form-group">
                @Html.Label("Storage Count", new { @class = "control-label" })
                @Html.TextBoxFor(t => t.Product.QuantityStorage, new { @class = "form-control" })
            </div>
            @*// Category Model
                // TRYOUT: dropdown to Category Model*@

            <div class="form-group">
                @Html.Label("Kategori", new { @class = "control-label" })
                @Html.DropDownListFor(m => m.Product.CategoryHeaderModel,
                                  new SelectList(Model.categories, "CategoryHeaderModelId", "Name", Model.Product.ProductModelId),
                                  "<-- Select -->",
                                  new { @class = "form-control" }
                ) <a class="btn btn-primary" data-toggle="modal" data-target=".bootstrapmodal"><span class="glyphicon glyphicon-plus"></span>add</a>
            </div>
        </div> <!-- Right Windows Ends -->
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="form-group">
                @Html.ActionLink("Back to List", "Index")
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<!-- New popup View -->
    <div class="modal bootstrapmodal">

        <div class="modal-dialog">

            <div class="modal-content">

                <div class="modal-header">

                    <button data-dismiss="modal" class="close"> <span>&times;</span></button>

                    <div class="modal-title">Tilføj Kategori</div>
                </div>

                <div class="modal-body">
                    @using (Html.BeginForm("addNewCategoryHeader", "Product", FormMethod.Post))
                    {
                        <div class="form-group">
                            @Html.Label("Navn", new { @class = "control-label" })
                            @Html.TextBoxFor(t => t.CategoryHeader.Name, new { @class = "form-control" })
                        </div>
                        <input type="submit" value="Gem" class="btn btn-primary"/>
                        <button class="btn btn-default" data-dismiss="modal">fortryd</button>
                    }    
                </div>
            </div>
        </div>
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}